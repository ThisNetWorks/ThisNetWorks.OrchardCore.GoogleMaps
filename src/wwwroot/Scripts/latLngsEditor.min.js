var map,googleMapsEditor,mapInit=function(){var t=$("#googleMapSettings").data("lat"),e=$("#googleMapSettings").data("lng");map=new google.maps.Map(document.getElementById("google-map"),{center:{lat:t,lng:e},zoom:8}),googleMapsEditor&&(googleMapsEditor.setAllMapShapes(),googleMapsEditor.setAutocomplete()),map.addListener("click",(function(t){googleMapsEditor?googleMapsEditor.mapClicked(t.latLng):console.log("error in vue app")}))};function initializeGoogleMapsEditor(t,e,o){var a,n,l=[];e.polygons.length>0&&(a=(l=e.polygons.map((function(t){return{name:t.name,strokeColor:t.strokeColor,strokeOpacity:t.strokeOpacity,strokeWeight:t.strokeWeight,fillColor:t.fillColor,fillOpacity:t.fillOpacity,latLngs:t.latLngs,selectedIndex:t.latLngs.length>0?t.latLngs.length-1:0}})))[0],n=0);var s,i,r=[],g={debug:!1,state:{defaultLocation:e.defaultLocation,marker:e.marker,polygons:l,selectedPolygon:a,selectedPolygonIndex:n},addPolygon:function(){this.state.polygons.push({name:"enter an identifier here",strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:2,fillColor:"#FF0000",fillOpacity:.35,latLngs:[],selectedIndex:0})},removePolygon:function(t){this.state.polygons.splice(t,1),this.setAllMapShapes()},selectPolygon:function(t){this.state.selectedPolygon=this.state.polygons.slice(t,1)[0],this.state.selectedPolygonIndex=t},selectPolygonLatLngIndex:function(t){this.state.selectedPolygon.selectedIndex=t,this.setPolygons()},addPolygonLatLng:function(){var t=this.state.polygons.splice(n,1)[0];t.latLngs.push({lat:"",lng:""}),this.state.polygons.splice(n,0,t),this.setAllMapShapes()},addPolygonLatLngs:function(t){var e=this.state.polygons.splice(n,1)[0];e.latLngs.splice(e.selectedIndex+1,0,{lat:t.lat(),lng:t.lng()}),e.selectedIndex=e.selectedIndex+1,this.state.polygons.splice(n,0,e),this.setAllMapShapes()},removePolygonLatLng:function(t){var e=this.state.polygons.splice(n,1)[0];e.latLngs.splice(t,1),this.state.polygons.splice(n,0,e),this.setAllMapShapes()},getJson:function(){return JSON.stringify({marker:this.state.marker,polygons:this.state.polygons.map((function(t){return{name:t.name,strokeColor:t.strokeColor,strokeOpacity:t.strokeOpacity,strokeWeight:t.strokeWeight,fillColor:t.fillColor,fillOpacity:t.fillOpacity,latLngs:t.latLngs.filter((function(t){return t.lat&&t.lng}))}}))})},setAllMapShapes:function(){map&&(this.setPolygons(),this.setMarker(),this.setBounds())},setBounds:function(){var t=new google.maps.LatLngBounds,e=!1;r.forEach((function(o,a){o.markers.forEach((function(o){t.extend(o.position),e=!0}))})),s&&(t.extend(s.position),e=!0),e?map.fitBounds(t):map.setCenter(new google.maps.LatLng(this.state.defaultLocation.lat,this.state.defaultLocation.lng))},setMarker:function(t){if(t&&(this.state.marker.latLng.lat=t.lat(),this.state.marker.latLng.lng=t.lng()),this.state.marker&&this.state.marker.latLng&&0!==this.state.marker.latLng.lat&&0!==this.state.marker.latLng.lng){s&&s.setMap(null);var e=new google.maps.LatLng(this.state.marker.latLng.lat,this.state.marker.latLng.lng);s=new google.maps.Marker({position:e,map:map}),map.panTo(e)}},clearMarker:function(){this.state.marker.location="",this.state.marker.latLng.lat=0,this.state.marker.latLng.lng=0,s&&s.setMap(null),s=null},setPolygons:function(){var t=this;this.state.polygons.forEach((function(e,o){var a=[],n=[],l=[];e.latLngs.forEach((function(s,i){if(s.lat&&s.lng){var r=new google.maps.LatLng(s.lat,s.lng);a.push(r);var g="black";e.selectedIndex==i&&(g="#001bff"),(e.selectedIndex==e.latLngs.length-1&&0==i||e.selectedIndex!=e.latLngs.length-1&&i==e.selectedIndex+1)&&(g="#007bff");var c=new google.maps.Marker({position:r,icon:{path:google.maps.SymbolPath.CIRCLE,scale:5,strokeColor:g},draggable:!0,map:map});n.push(c);var p=google.maps.event.addListener(c,"dragend",(function(e){var a=t.state.polygons.splice(o,1)[0],n=a.latLngs.splice(i,1)[0];n.lat=e.latLng.lat(),n.lng=e.latLng.lng(),a.latLngs.splice(i,0,n),a.selectedIndex=i,t.state.polygons.splice(o,0,a),t.setPolygons()}));l.push(p)}})),r[o]&&r[o].shape&&(r[o].shape.setMap(null),r[o].markers.forEach((function(t){t.setMap(null),t=null})),r[o].listeners.forEach((function(t){google.maps.event.removeListener(t),t=null}))),a.length>1&&(r[o]={shape:new google.maps.Polygon({paths:a,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokeWeight:e.strokeWeight,fillColor:e.fillColor,fillOpacity:e.fillOpacity}),markers:n,listeners:l},r[o].shape.setMap(map))}))}},c={template:"#latlngs-modal",props:["data"],name:"latlngs-modal",methods:{showModal:function(){$(o).modal()},closeModal:function(){$(o).modal().modal("hide"),g.setPolygons()}}};googleMapsEditor=new Vue({components:{markerEditor:{template:"#marker-editor",props:["data"],name:"marker-editor",methods:{clear:function(){g.clearMarker()},setAutocomplete:function(){i=new google.maps.places.Autocomplete(this.$refs.location),places=new google.maps.places.PlacesService(map),i.addListener("place_changed",(function(){var t=i.getPlace();t.geometry?g.setMarker(t.geometry.location):g.clearMarker()}))}}},polygonMetadataEditor:{template:"#polygon-metadata-editor",props:["data","index"],name:"polygon-metadata-editor",methods:{remove:function(){g.removePolygon(index)}}},polygonLatlngsTable:{template:"#polygon-latlngs-table",props:["data"],name:"polygon-latlngs-table",methods:{add:function(){g.addPolygonLatLng()},remove:function(t){g.removePolygonLatLng(t)},dragEnd:function(t){g.selectPolygonLatLngIndex(t.newIndex),g.setPolygons()},selectIndex:function(t){g.selectPolygonLatLngIndex(t)},getSelectedColor:function(t){return this.data.selectedIndex==t?{"background-color":"#001bff"}:this.data.selectedIndex==this.data.latLngs.length-1&&0==t||this.data.selectedIndex!=this.data.latLngs.length-1&&t==this.data.selectedIndex+1?{"background-color":"#007bff"}:void 0}}},latlngsModal:c},data:{sharedState:g.state,activeTabId:"tabMarker"},el:t,mounted:function(){var t=this;this.setAllMapShapes(),$('a[data-toggle="tab"]').on("shown.bs.tab",(function(e){t.activateTab(e.target)}))},methods:{activateTab:function(t){this.activeTabId=t.id},showModal:function(){c.methods.showModal()},addPolygon:function(){g.addPolygon()},removePolygon:function(t){g.removePolygon(t)},getJson:function(){return g.getJson()},selectPolygon:function(t){g.selectPolygon(t)},addPolygonLatLngs:function(t){g.addPolygonLatLngs(t)},setMarker:function(t){g.setMarker(t)},setAllMapShapes:function(){g.setAllMapShapes()},mapClicked:function(t){switch(this.activeTabId){case"tabMarker":this.setMarker(t);break;case"tabPolygons":this.addPolygonLatLngs(t);break;default:console.log("error on map click")}},setAutocomplete:function(){this.$refs.markerEditor.setAutocomplete()}}})}
