@model dynamic
@inject ISession Session
@inject IContentManager ContentManager
@{
    if (Model.ContentType != null)
    {
        var contentType = Model.ContentType as string;
        var query = Session.Query<ContentItem, GoogleMapPartIndex>(x => x.ContentType == contentType);
        var results = await query.ListAsync();
        var list = new List<DisplayMapViewModel>();
        foreach(var contentItem in results)
        {    
            var googleMapPart = contentItem.As<GoogleMapPart>();
            var contentItemMetadata = await ContentManager.PopulateAspectAsync<ContentItemMetadata>(contentItem);
            var request = Url.ActionContext.HttpContext.Request;
            var routes = contentItemMetadata.DisplayRouteValues;
            var url = Url.Action(routes["action"].ToString(), routes["controller"].ToString(), routes, request.Scheme);

            var item = new DisplayMapViewModel
            {
                Marker = googleMapPart.Marker,
                Polygons = googleMapPart.Polygons,
                Path = url
            };
            list.Add(item);
        }

        var serialized = JsonConvert.SerializeObject(list, CamelCaseJsonSerializer.Settings);

        <div class="google-maps-data" data-google-maps-data='@Html.Raw(serialized)' style="display:none"></div>
    } 
}
