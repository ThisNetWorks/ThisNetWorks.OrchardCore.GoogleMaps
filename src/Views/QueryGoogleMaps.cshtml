@model dynamic
@inject ISession Session
@inject IOptions<AutorouteOptions> AutorouteOptions
@{
    if (Model.ContentType != null)
    {
        var contentType = Model.ContentType as string;
        var query = Session.QueryIndex<GoogleMapPartIndex>(x => x.ContentType == contentType);
        var results = await query.ListAsync();
        var list = new List<DisplayMapViewModel>();
        foreach(var result in results)
        {    
            var routeValues = new RouteValueDictionary(AutorouteOptions.Value.GlobalRouteValues);
            routeValues[AutorouteOptions.Value.ContentItemIdKey] = result.ContentItemId;
            var url = Url.RouteUrl(routeValues);
            var item = new DisplayMapViewModel
            {
                Marker = new LatLng { Lat = result.Lat, Lng = result.Lng },
                Path = url
            };
            list.Add(item);
        }

        var serialized = JsonConvert.SerializeObject(list, CamelCaseJsonSerializer.Settings);

        <div class="google-maps-data" data-google-maps-data='@Html.Raw(serialized)' style="display:none"></div>
    } 
}
