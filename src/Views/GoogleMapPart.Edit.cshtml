@model GoogleMapPartViewModel

<div class="form-group" asp-validation-class-for="Location">
    <label asp-for="Location">@T["Location"]</label>
    <input asp-for="Location" class="form-control content-preview-text" />
    <span class="hint">@T["Location search with Google Maps Places API."]</span>
</div>

<div class="row">
    <div class="form-group col-12 col-md-6" asp-validation-class-for="Marker.Lat">
        <label asp-for="Marker.Lat">@T["Latitude"]</label>
        <input asp-for="Marker.Lat" class="form-control content-preview-text" />
        <span class="hint">@T["Latitude."]</span>
    </div>

    <div class="form-group col-12 col-md-6" asp-validation-class-for="Marker.Lng">
        <label asp-for="Marker.Lng">@T["Longitude"] </label>
        <input asp-for="Marker.Lng" class="form-control content-preview-text" />
        <span class="hint">@T["Longitude."]</span>
    </div>
</div>

@await DisplayAsync(await New.GoogleMapPartContainer_Edit())

<script asp-name="google-maps-init" at="Foot" depends-on="jQuery">

    var autocomplete;
    var map;
    var setMarker;
    var marker;
    var mapInit = function () {
        map = new google.maps.Map(document.getElementById('google-map'), {
            center: { lat: @Model.Settings.DefaultLat, lng: @Model.Settings.DefaultLng },
            zoom: 8
        });

        setMarker = function (position, map) {
            if (marker != undefined) {
                marker.setMap(null);
            }

            marker = new google.maps.Marker({
                position: position,
                map: map
            });

            map.panTo(position);

            $('#@Html.IdFor(m => m.Marker.Lat)').val(position.lat());
            $('#@Html.IdFor(m => m.Marker.Lng)').val(position.lng());
        };

        @if(Model.Marker.Lat != 0 && Model.Marker.Lng != 0)
        {
            <text>
            setMarker(new google.maps.LatLng(@Model.Marker.Lat, @Model.Marker.Lng), map);
            </text>
        }

        $('#@Html.IdFor(m => m.Marker.Lat)').change(function () {
            setMarker(new google.maps.LatLng($(this).val(), @Model.Marker.Lng), map);
        })

        $('#@Html.IdFor(m => m.Marker.Lng)').change(function () {
            setMarker(new google.maps.LatLng(@Model.Marker.Lat, $(this).val()), map);
        })

        map.addListener('click', function(e) {
            setMarker(e.latLng, map);
        });

        autocomplete = new google.maps.places.Autocomplete(document.getElementById('@Html.IdFor(m => m.Location)'));
        places = new google.maps.places.PlacesService(map);

        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            if (place.geometry) {
                setMarker(place.geometry.location, map);
            } else {
                document.getElementById('location-input').placeholder = '';
            }
        });
    }

</script>

<script asp-name="google-maps" asp-src="https://maps.googleapis.com/maps/api/js?key=@Model.Settings.ApiKey&libraries=places&callback=mapInit" at="Foot" depends-on="google-maps-init"></script>