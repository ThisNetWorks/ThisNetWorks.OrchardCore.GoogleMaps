@model ThisNetWorks.OrchardCore.GoogleMaps.Settings.GoogleMapsSettingsViewModel

<div class="form-group">
    <div class="w-lg-50 w-100">
        <label asp-for="ApiKey">@T["Api Key"]</label>
        <input asp-for="ApiKey" class="form-control" />
    </div>
    <div class="w-100">
        <span class="hint">@T["Google Maps Api Key."]</span>        
    </div>
</div>

<div class="form-group" asp-validation-class-for="Location">
    <div class="w-lg-50 w-100">
        <label asp-for="Location">@T["Location"]</label>
        <input asp-for="Location" class="form-control content-preview-text" />
    </div>
    <div class="w-100">
        <span class="hint">@T["Set default location with Google Maps Places API search."]</span>
    </div>
</div>

<div class="form-group">
    <div class="w-lg-50 w-100">
        <label asp-for="DefaultLat">@T["Default Latitude"]</label>
        <input asp-for="DefaultLat" type="number" class="form-control" />
    </div>
    <div class="w-100">
        <span class="hint">@T["The default latitude to use when selecting a location."]</span>
    </div>
</div>

<div class="form-group">
    <div class="w-lg-50 w-100">
        <label asp-for="DefaultLng">@T["Default Longitude"]</label>
        <input asp-for="DefaultLng" type="number" class="form-control" />
    </div>
    <div class="w-100">
        <span class="hint">@T["The default longitude to use when selecting a location."]</span>
    </div>
</div>

@if (!String.IsNullOrEmpty(Model.ApiKey))
{
    @await DisplayAsync(await New.GoogleMapsSettingsContainer_Edit())
}
else
{
    <p class="alert alert-warning">The map will load to set defaults when the Api Key has been set.</p>
}

@if (!String.IsNullOrEmpty(Model.ApiKey))
{
    <script asp-name="google-maps-init" at="Foot" depends-on="jQuery">

        var autocomplete;
        var map;
        var setMarker;
        var marker;
        var mapInit = function () {
            map = new google.maps.Map(document.getElementById('google-map'), {
                center: { lat: @Model.DefaultLat, lng: @Model.DefaultLng },
                zoom: 8
            });

            setMarker = function (position, map) {
                if (marker != undefined) {
                    marker.setMap(null);
                }

                marker = new google.maps.Marker({
                    position: position,
                    map: map
                });

                map.panTo(position);

                $('#@Html.IdFor(m => m.DefaultLat)').val(position.lat());
                $('#@Html.IdFor(m => m.DefaultLng)').val(position.lng());
            };

            @if (Model.DefaultLat != 0 && Model.DefaultLng != 0)
            {
                <text>
                setMarker(new google.maps.LatLng(@Model.DefaultLat, @Model.DefaultLng), map);
                </text>
            }

            $('#@Html.IdFor(m => m.DefaultLat)').change(function () {
                setMarker(new google.maps.LatLng($(this).val(), $('#@Html.IdFor(m => m.DefaultLng)').val()), map);
            })

            $('#@Html.IdFor(m => m.DefaultLng)').change(function () {
                setMarker(new google.maps.LatLng($('#@Html.IdFor(m => m.DefaultLat)').val(), $(this).val()), map);
            })

            map.addListener('click', function(e) {
                setMarker(e.latLng, map);
            });

            autocomplete = new google.maps.places.Autocomplete(document.getElementById('@Html.IdFor(m => m.Location)'));
            places = new google.maps.places.PlacesService(map);

            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                if (place.geometry) {
                    setMarker(place.geometry.location, map);
                } else {
                    document.getElementById('location-input').placeholder = '';
                }
            });
        }

    </script>

    <script asp-name="google-maps" asp-src="https://maps.googleapis.com/maps/api/js?key=@Model.ApiKey&libraries=places&callback=mapInit" at="Foot" depends-on="google-maps-init"></script>
}
